import Head from 'next/head'
import { useState } from 'react'
import questions from '../questions.json'

import Header from '../components/Header'
import Footer from '../components/Footer'

export default function Home() {

  const [currentQuestion, setCurrentQuestion] = useState(0)
  const [selectedOptions, setSelectedOptions] = useState([]) 
  const [score, setScore] = useState(0);
  const [showScore, setShowScore] = useState(false);    

  const handlePrevious = () => {
    const prevQues = currentQuestion - 1
    prevQues >= 0 && setCurrentQuestion(prevQues)
  }
  
  const handleNext = () => {
    const nextQues = currentQuestion + 1
    nextQues < questions.length && setCurrentQuestion(nextQues)
  }

  const handleAnswerOption = (answer) => {
    setSelectedOptions([
      (selectedOptions[currentQuestion] = { answerByUser: answer }),
    ])
    setSelectedOptions([...selectedOptions])
    
  }

  const handleSubmitButton = () => {
    let newScore = 0;
    for (let i = 0; i < questions.length; i++) {
      questions[i].answerOptions.map(
        (answer) =>
          answer.isCorrect &&
          answer.answer === selectedOptions[i]?.answerByUser &&
          (newScore += 1)
      );
    }
    setScore(newScore);
    setShowScore(true);
  };

  return (
    <div className="m-auto bg-qwhite">
      <Head>
        <title>Wellness Questionnaire</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="../styles/favicon.ico" />
      </Head>
      <Header />
      {showScore ? (
        <div className=' text-center bg-qPurple text-qWhite pb-12'>
          <h2 className="text-3xl font-semibold">
            Thank YOU for taking this Quiz!
          </h2>
          <h2 className="text-3xl font-semibold text-center text-qYellow mt-4">
          You scored {score} out of {questions.length}
          </h2>
          <h2 className='text-4xl mt-4'> Placing well-being at the heart of success.</h2>
        </div>
      ) : (
      <div className="flex flex-col w-[40%] my-4 px-5 mx-auto  justify-center items-center shadow-2xl border-2 border-qPurple/50 rounded-lg">
        <h4 className='text-xl' >Question {currentQuestion + 1} of {questions.length}</h4>
        <div className="mt-4 text-2xl">
         {questions[currentQuestion].question}
        </div>
    
      
        <div className="flex flex-col w-full ">
          {questions[currentQuestion].answerOptions.map((answer, index) => (
            <div
              key={index}
              className="flex items-center w-full py-4 pl-5 m-2 ml-0 space-x-2 border-2 cursor-pointer bg-white/5 border-qPurple rounded-xl"
              onClick={(e) => handleAnswerOption(answer.answer)}
            >
              <input type="radio" 
                name={answer.answer}
                value={answer.answer}
                onChange={(e) => handleAnswerOption(answer.answer)}
                checked={
                  answer.answer === selectedOptions[currentQuestion]?.answerByUser
                }
                className="w-6 h-6 " />
              <p className="ml-6 ">{answer.answer}</p>
            </div>
          ))}
        </div>
        <div className="flex justify-between w-full mt-4 text-white pb-4">
          <button className="w-[49%] py-3 bg-qPurple rounded-lg text-qWhite  font-bold hover:text-qYellow" onClick={handlePrevious}>Previous</button>
          
          <button onClick={ currentQuestion + 1 === questions.length ? handleSubmitButton : handleNext}  className='w-[49%] py-3 bg-qPurple text-qWhite font-bold rounded-lg hover:text-qYellow'>
            {currentQuestion + 1 === questions.length ? 'Submit' : 'Next'}
          </button>
        </div>
      </div>
      )
    }
    <Footer />
    </div>
      
  )
}
